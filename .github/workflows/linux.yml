name: Linux Build

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_28_x86_64

    steps:
    - uses: actions/checkout@v4
      
    - name: Checkout submodules
      run: |
        git config --global --add safe.directory /__w/charm-gems/charm-gems
        git submodule init
        git submodule update

    - name: Download gcc 8 compilers
      run: |
        dnf-install -y gcc-toolset-X

    # - name: Install CMake and Zlib
    #   run: |
    #     yum install -y cmake3 zlib-devel
    #     ln -s /usr/bin/cmake3 /usr/bin/cmake
    - name: Install Zlib
      run: |
        dnf-install -y zlib-devel

    - name: Build ITK
      run: |

        export CC=/opt/rh/devtoolset-8/root/usr/bin/gcc
        export CXX=/opt/rh/devtoolset-8/root/usr/bin/g++
        mkdir ITK-build
        cd ITK-build
        cmake \
            -DBUILD_SHARED_LIBS=OFF \
            -DBUILD_TESTING=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=../ITK-install \
            ../ITK
        make install
        cd ..
 
    - name: Build charm-gems
      run: |
        export CC=/opt/rh/devtoolset-8/root/usr/bin/gcc
        export CXX=/opt/rh/devtoolset-8/root/usr/bin/g++
        .github/workflows/linux_build.sh /opt/python/cp38-cp38/bin/python
        .github/workflows/linux_build.sh /opt/python/cp39-cp39/bin/python
        .github/workflows/linux_build.sh /opt/python/cp310-cp310/bin/python
        .github/workflows/linux_build.sh /opt/python/cp311-cp311/bin/python
        ls dist/*.whl | xargs -n1 auditwheel repair
      env:
        ITK_DIR: ITK-install


    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-wheels
        path: wheelhouse/*.whl

    - name: Upload to PyPI
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
      run: |
        $PYTHON -m pip install twine
        $PYTHON -m twine upload wheelhouse/*.whl -u __token__ -p "$PASSWORD"
      env:
        PASSWORD: ${{ secrets.PYPI_TOKEN }}
        PYTHON: /opt/python/cp38-cp38/bin/python
